<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zwhzzz.dao.StudentDao">

  <select id="findStudentByName" parameterType="String" resultType="Student">
    select * from stu where username = #{username}
  </select>

  <select id="findAll" resultType="Student">
    select * from stu
  </select>

  <select id="get_Student_List" parameterType="Map" resultType="Student">
    select * from stu where 1=1
    <if test="username != null">
      and username like #{username}
    </if>
    <if test="clazzId != null">
     and clazzId = #{clazzId}
    </if>
      limit #{offset},#{pageSize}
</select>

  <select id="getCount" parameterType="Map" resultType="Integer">
    select count(id) from stu where 1=1
    <if test="username != null">
      and username like #{username}
    </if>
    <if test="clazzId != null">
      and clazzId = #{clazzId}
    </if>

  </select>

  <insert id="insertStudent" parameterType="Student">
    insert into stu(id,clazzId,username,sno,password,gender,email,telephone,address,portrait_path,introducation) values(null,#{clazzId},#{username},#{sno},#{password},#{gender},#{email},#{telephone},#{address},#{portrait_path},#{introducation})
  </insert>

  <update id="updateStudent" parameterType="Student">
    update stu set clazzId = #{clazzId},username = #{username},gender=#{gender},email=#{email},telephone=#{telephone},address=#{address},introducation=#{introducation} where id=#{id}
  </update>

  <delete id="deleteStudent" parameterType="String">
    delete from stu where id in (${value})
  </delete>

  <update id="updatePassword" parameterType="Student">
    update stu set password = #{password} where id = #{id}
  </update>

</mapper>